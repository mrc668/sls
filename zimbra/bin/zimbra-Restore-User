#!/bin/bash
# source: salt://sls/zimbra/bin/zimbra-Restore-User
# https://syslint.com/blog/tutorial/zimbra-server-migration-and-zimbra-account-transfer-the-perfect-method/
# Another good article: https://imanudin.net/2015/01/29/how-to-restore-zimbra-mailbox/
# And https://gist.github.com/filippo/c2e35aedd1f5de729b3b

#
# while testing this script and/or a mail server
# su zimbra -c "zmprov da milton@calnek.com"
#


backupDir=$1
[ "$backupDir" ] || { 
  echo Usage: $0 backupDir user@domain
  exit
}

recoveryUser=$2
[ "$recoveryUser" ] || { 
  echo Usage: $0 backupDir user@domain
  exit
}

zmpwrapper () {
  myargs=( )
  [ "$1" ] && myargs+=("$1")
  [ "$2" ] && myargs+=("$2")
  [ "$3" ] && myargs+=("$3")
  [ "$4" ] && myargs+=("$4")
  [ "$5" ] && myargs+=("$5")
  [ "$6" ] && myargs+=("$6")
  [ "$7" ] && myargs+=("$7")
  [ "$8" ] && myargs+=("$8")
  echo zmprov $(printf "'%s' " "${myargs[@]}")

  echo zmprov $*
  su zimbra -c "/opt/zimbra/bin/zmprov $*"
   $(printf "'%s' " "${myargs[@]}")
  date
}


cd $backupDir

login=$(echo $recoveryUser | sed -e "s/@.*$//")

givenName=$(grep givenName: $recoveryUser-name.txt | sed -e "s/^.*givenName: //")
[ "$givenName" ] || givenName=$login

lastName=$(grep displayName: $recoveryUser-name.txt | sed -e "s/^ *//" | cut -d\   -f 3-)
[ "$lastName" ] || lastName=$login

displayName=$(grep displayName: $recoveryUser-name.txt | cut -d\  -f2-)
[ "$displayName" ] || displayName=$login


# 
# Create user, restore password
#
echo zmprov ca $recoveryUser CHANGEme cn "$displaynName" displayName "$displayName" givenName "$givenName"  zimbraPrefFromDisplay "$displayName" sn "$lastName"
zmprov ca $recoveryUser CHANGEme cn "$displaynName" displayName "$displayName" givenName "$givenName"  zimbraPrefFromDisplay "$displayName" sn "$lastName"
zmpwrapper ma $recoveryUser userPassword $(cat $recoveryUser-password)


#
# Copy mail into user's account
#
echo zmmailbox -z -m $recoveryUser postRestURL "/?fmt=tgz&resolve=skip" $recoveryUser.tgz
zmmailbox -z -m $recoveryUser postRestURL "/?fmt=tgz&resolve=skip" $recoveryUser.tgz
echo $(date) finished $recoveryUser
#echo Not recovering email

#
# Recover aliases
#
[ -f  ${recoveryUser}-alias.txt ] && {
  cat ${recoveryUser}-alias.txt | while read gar alname; do
    echo  $recoveryUser has alias $alname
    zmpwrapper aaa $recoveryUser $alname
    echo  $recoveryUser has alias $alname --- restored
  done
}

#
# Recover Signatures
#
#zmprov ma $i zimbraSignatureName "`cat signatures/$i.name`";
#zmprov ma $i zimbraPrefMailSignatureHTML "`cat signatures/$i.signature`";
#zmprov ga $i zimbraSignatureId > /tmp/firmaid; sed -i -e "1d" /tmp/firmaid;
#firmaid=`sed 's/zimbraSignatureId: //g' /tmp/firmaid`;
#zmprov ma $i zimbraPrefDefaultSignatureId "$firmaid";
#zmprov ma $i zimbraPrefForwardReplySignatureId "$firmaid";
#rm -rf /tmp/firmaid;
#echo $i "done!";

#
# Recover filters
#
[ -f ${recoveryUser}-filters ] && {
  zmpwrapper ma  $recoveryUser zimbraMailSieveScript  "$(cat $recoveryUser-filters)"
} || {
  echo $recoveryUser does not have filters
}

[ -f ${recoveryUser}-outgoingSieve ] && {
  zmpwrapper ma  $recoveryUser zimbraMailOutgoingSieveScript  "$(cat $recoveryUser-filters)"
} || {
  echo $recoveryUser does not have filters
}

# 
# Trusted Senders
#
[ -f ${recoveryUser}-trustedSenders ] &&  {
  for t in $(cat ${recoveryUser}-trustedSenders); do
    zmpwrapper ma $recoveryUser +zimbraPrefMailTrustedSenderList $t
  done
}




